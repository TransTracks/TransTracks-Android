name: Continuous Integration

env:
  BUILD_NUMBER: ${{ github.run_number }}

on:
  pull_request:
    branches: [ "production" ]
  push:
    branches: [ "production" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: üöö Checkout PR
      uses: actions/checkout@v3
      
    - name: ‚òïÔ∏è Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'liberica'
        cache: gradle
        
    - name: üôå Copy secrets file
      run: cp secrets.properties.example secrets.properties
      
    - name: üìë Create Google Services file
      env:
        GOOGLE_SERVICES_JSON_64: ${{ secrets.GOOGLE_SERVICES_JSON_64 }}
      run: echo $GOOGLE_SERVICES_JSON_64 | base64 -di > ./app/google-services.json

    - name: üìù Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: üë∑‚Äç‚ôÄÔ∏è Build with Gradle
      run: ./gradlew build
    
    - name: üõú Upload reports
      if: always()
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Lint Results
        path: app/build/reports/lint-results-debug.html


  check-gradle-wrapper:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöö Checkout PR
      uses: actions/checkout@v3
      
    - name: üåØ Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1.0.6
      
  depoy-app:
    runs-on: ubuntu-latest
    needs: [build, check-gradle-wrapper]
    if: ${{ github.event_name == 'push' && github.ref_name == 'production' }}
    
    steps:
    - name: üöö Checkout PR
      uses: actions/checkout@v3
      
    - name: ‚òïÔ∏è Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'liberica'
        cache: gradle
        
    - name: üôå Copy secrets file
      run: cp secrets.properties.example secrets.properties
      
    - name: üìë Create Google Services file
      env:
        GOOGLE_SERVICES_JSON_64: ${{ secrets.GOOGLE_SERVICES_JSON_64 }}
      run: echo $GOOGLE_SERVICES_JSON_64 | base64 -di > ./app/google-services.json
      
    - name: üìù Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: üë∑‚Äç‚ôÄÔ∏è Bundle Release
      run: ./gradlew bundleRelease
      
    - name: üìë Create keystore file
      env:
        KEYSTORE_64: ${{ secrets.KEYSTORE_64 }}
      run: echo $KEYSTORE_64 | base64 -di > keystore.jks
      
    - name: ‚úçÔ∏è Sign bundle
      env:
        STORE_PASS: ${{ secrets.STORE_PASS }}
        KEY_PASS: ${{ secrets.KEY_PASS }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      run: jarsigner -keystore keystore.jks -storepass $STORE_PASS -keypass $KEY_PASS $RELEASE_BUNDLE_PATH $KEY_ALIAS
      
    - name: üõú Upload Android Release to Play Store
      uses: r0adkll/upload-google-play@v1.1.1
      with:
        serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        packageName: com.drspaceboo.transtracks
        releaseFile: ${{ env.RELEASE_BUNDLE_PATH }}
        track: internal
        mappingFile: ${{ env.RELEASE_MAPPING_PATH }}
