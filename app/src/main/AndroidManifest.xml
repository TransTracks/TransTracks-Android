<?xml version="1.0" encoding="utf-8"?>

<!--
  ~ Copyright Â© 2018 TransTracks. All rights reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.INTERNET" />

    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />

    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="28" />

    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />

    <application
        android:name=".TransTracksApp"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_descriptor"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/PinkAppTheme">

        <uses-library
            android:name="org.apache.http.legacy"
            android:required="false" />

        <activity
            android:name=".ui.MainActivity"
            android:configChanges="keyboardHidden|orientation|screenLayout"
            android:exported="true"
            android:label="@string/app_name"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize">
            <intent-filter>
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <!--
                 Capture content by MIME type, which is how Gmail broadcasts
                 attachment open requests.  pathPattern and file extensions
                 are ignored, so the MIME type *MUST* be explicit, otherwise
                 we will match absolutely every file opened.
            -->
            <intent-filter
                android:label="@string/app_name"
                android:priority="50">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:mimeType="application/vnd.ni.ttbackup" />
            </intent-filter>

            <!--
                 Capture file open requests (pathPattern is honoured) where no
                 MIME type is provided in the Intent.  An Intent with a null
                 MIME type will never be matched by a filter with a set MIME
                 type, so we need a second intent-filter if we wish to also
                 match files with this extension and a non-null MIME type
                 (even if it is non-null but zero length).
            -->
            <intent-filter
                android:label="@string/app_name"
                android:priority="50">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:host="*" />
                <data android:mimeType="*/*" />

                <!--
                     Work around Android's ugly primitive PatternMatcher
                     implementation that can't cope with finding a . early in
                     the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.ttbackup" />
            </intent-filter>

            <!--
                 Capture file open requests (pathPattern is honoured) where a
                 (possibly blank) MIME type is provided in the Intent.  This
                 filter may only be necessary for supporting ES File Explorer,
                 which has the probably buggy behaviour of using an Intent
                 with a MIME type that is set but zero-length.  It's
                 impossible to match such a type except by using a global
                 wildcard.
            -->
            <intent-filter
                android:label="@string/app_name"
                android:priority="50">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.DEFAULT" />

                <data android:scheme="file" />
                <data android:scheme="content" />
                <data android:host="*" />

                <!--
                     Work around Android's ugly primitive PatternMatcher
                     implementation that can't cope with finding a . early in
                     the path unless it's explicitly matched.
                -->
                <data android:pathPattern=".*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\.ttbackup" />
                <data android:pathPattern=".*\\..*\\..*\\..*\\..*\\..*\\..*\\.ttbackup" />
            </intent-filter>
        </activity>

        <activity-alias
            android:name=".MainActivityDefault"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/app_name"
            android:targetActivity=".ui.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity-alias>

        <activity-alias
            android:name=".MainActivityTrain"
            android:enabled="false"
            android:exported="true"
            android:icon="@mipmap/ic_launcher_train"
            android:label="@string/train_tracks_title"
            android:targetActivity=".ui.MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity-alias>

        <!-- Trigger Google Play services to install the backported photo picker module. -->
        <service android:name="com.google.android.gms.metadata.ModuleDependencies"
            android:enabled="false"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.android.gms.metadata.MODULE_DEPENDENCIES" />
            </intent-filter>
            <meta-data android:name="photopicker_activity:0:required" android:value="" />
        </service>

        <provider
            android:name=".data.TransTracksFileProvider"
            android:authorities="com.drspaceboo.transtracks.data.TransTracksFileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="@string/ADS_APP_ID" />
        <meta-data
            android:name="firebase_analytics_collection_enabled"
            android:value="false" />
        <meta-data
            android:name="firebase_crashlytics_collection_enabled"
            android:value="false" />
        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />
    </application>
</manifest>
